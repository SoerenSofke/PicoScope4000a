% Soeren Sofke, IBS
% 2021-04-02

close all;
clear;

%% Set parameters
NUM_SAMPLES_PER_RUN = 40e6;

CHANNEL = PicoScope4000a.CHANNEL.A;
COUPLING = PicoScope4000a.COUPLING.DC;
PROBE_RANGE = PicoScope4000a.PROBE_RANGE.DIFFERENTIAL_5V;
SAMPLE_RATE = PicoScope4000a.SAMPLE_RATE.FS_40MHZ;

ANALOG_OFFSET_V = 0;
SEGMENT_INDEX = 0;
DOWN_SAMPLE_RATIO = 1;
RATIO_MODE = PicoScope4000a.RATIO_MODE.NONE;

%% Open unit
PicoScope4000a.loadLibrary();
[status, handle] = PicoScope4000a.openUnit();
disp(status)

%% Switching off channel A to H
enabled = false;
for channelIndex = PicoScope4000a.CHANNEL.A:PicoScope4000a.CHANNEL.H
    status = PicoScope4000a.setChannel(...
        handle, ...
        channelIndex, ...
        enabled, ...
        COUPLING, ...
        PROBE_RANGE, ...
        ANALOG_OFFSET_V ...
        );
    disp(status)
end

%% Switching on channel A
enabled = true;
status = PicoScope4000a.setChannel(...
    handle, ...
    CHANNEL, ...
    enabled, ...
    COUPLING, ...
    PROBE_RANGE, ...
    ANALOG_OFFSET_V ...
    );
disp(status)

%% Start block recording
preTriggerSamples = 0;
postTriggerSamples = NUM_SAMPLES_PER_RUN;
[status] = PicoScope4000a.runBlock(...
    handle, ...
    preTriggerSamples, ...
    postTriggerSamples, ...
    SAMPLE_RATE, ...
    SEGMENT_INDEX...
    );
disp(status)

%% Busy waiting
PicoScope4000a.waitUntilDataIsReady(handle)

%% Allocate buffer for data to fetch from device
bufferLth = NUM_SAMPLES_PER_RUN;
[status, bufferPtr] = PicoScope4000a.setDataBuffer(...
    handle, ...
    CHANNEL, ...
    bufferLth, ...
    SEGMENT_INDEX, ...
    RATIO_MODE ...
    );
disp(status)

%% Fetch data from picoscope into buffer
startIndex = 0;
noOfSamples = NUM_SAMPLES_PER_RUN;
[status, noOfSamples, overflow] = PicoScope4000a.getValues(...
    handle, ...
    startIndex, ...
    noOfSamples, ...
    DOWN_SAMPLE_RATIO, ...
    RATIO_MODE, ...
    SEGMENT_INDEX ...
    );
disp(status);

%% Close unit
status = PicoScope4000a.closeUnit(handle);
disp(status)
PicoScope4000a.unloadLibrary();

%% Show data
data = get(bufferPtr, 'value');
plot(data(1:1e5))